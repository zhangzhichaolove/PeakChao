关机
halt

允许root账户登录
执行sudo passwd root 设置root账户的密码
sudo vim /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf
打开文件内插入一行。greeter-show-manual-login=true。对文件进行保存。然后进行重启系统。

获取Root权限
su chao su root或者是sudo -s 或者 su


用root用户在图形界面登录会有错误，读取/root/.profile时发生错误：mesg:tty n 还需要做如下修改
sudo vi /root/.profile
找到 mesg n  替换成 tty -s && mesg n   重启系统。


Tomcat开机启动

复制配置文件
cp /usr/local/chao/tomcat/apache-tomcat-8.5.23/bin/catalina.sh /etc/init.d/

重命名
mv catalina.sh tomcat

跳转到配置目录
cd /etc/init.d/

编辑配置文件
vim tomcat

配置环境变量
CATALINA_HOME=/usr/local/chao/tomcat/apache-tomcat-8.5.23
JAVA_HOME=/usr/local/chao/java/jdk1.8.0_144

添加到开机自动服务（移除：remove）：
update-rc.d -f tomcat defaults

测试后重启
sysv-rc-conf --list tomcat


JAVA_OPTS="-server -Xms1536m -Xmx1536m -XX:NewSize=320m -XX:MaxNewSize=320m -XX:PermSize=96m -XX:MaxPermSize=256m -Xmn500m -XX:MaxTenuringThreshold=5"
JAVA_OPTS并不是已成不变的，不同的应用、软硬件环境下，要想充分发挥应用的性能，这些参数里边的设置可是非常有技巧和具有经验积累的。
经过查找资料，先看下JAVA_OPTS参数表示的意义。
-server:一定要作为第一个参数，在多个CPU时性能佳
-Xms：初始Heap大小，使用的最小内存,cpu性能高时此值应设的大一些
-Xmx：java heap最大值，使用的最大内存
上面两个值是分配JVM的最小和最大内存，取决于硬件物理内存的大小，建议均设为物理内存的一半。-XX:PermSize:设定内存的永久保存区域
-XX:MaxPermSize:设定最大内存的永久保存区域
-XX:MaxNewSize:
-Xss 15120 这使得JBoss每增加一个线程（thread)就会立即消耗15M内存，而最佳值应该是128K,默认值好像是512k.
+XX:AggressiveHeap 会使得 Xms没有意义。这个参数让jvm忽略Xmx参数,疯狂地吃完一个G物理内存,再吃尽一个G的swap。
-Xss：每个线程的Stack大小
-verbose:gc 现实垃圾收集信息
-Xloggc:gc.log 指定垃圾收集日志文件
-Xmn：young generation的heap大小，一般设置为Xmx的3、4分之一
-XX:+UseParNewGC ：缩短minor收集的时间
-XX:+UseConcMarkSweepGC ：缩短major收集的时间
提示：此选项在Heap Size 比较大而且Major收集时间较长的情况下使用更合适。